Bowling:

1 game = 10 frames

1 player 		:plays: 	10 frames
1 player 		:has: 		2 chances per frame


so:

1 Bowling game = 10 frames per person

so basically every game is separate per person.
Each person that plays 10 frames, basically plays 1 Bowling game.
Hence, 6 people bowling 10 frames mean, 6 people have played 6 games; one game per person.

Socring Rules:

X = Strike! 
^ all 10 pins fall in the first attempt (there are total 2 attempts / chances per frame)

/ = spare
^ denotes the number of pins left standing for the second chance

CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `firstname` varchar(255) DEFAULT NULL,
  `lastname` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

[proxy_fcgi:error] [pid 2193:tid 140019809310464] [client 127.0.0.1:47623] AH01071: Got error 'PHP message: PHP Warning:  The use statement with non-compound name 'Exception' has no effect in /srv/www/work/tracker/app/config/bootstrap/environments.php on line 3\nPHP message: PHP Stack trace:\nPHP message: PHP   1. {main}() /srv/www/work/tracker/app/webroot/index.php:0\nPHP message: PHP   2. require() /srv/www/work/tracker/app/webroot/index.php:22\nPHP message: PHP Warning:  The use statement with non-compound name 'Exception' has no effect in /srv/www/work/tracker/app/config/bootstrap/action.php on line 21\nPHP message: PHP Stack trace:\nPHP message: PHP   1. {main}() /srv/www/work/tracker/app/webroot/index.php:0\nPHP message: PHP   2. require() /srv/www/work/tracker/app/webroot/index.php:22\nPHP message: PHP Warning:  The use statement with non-compound name 'Exception' has no effect in /srv/www/work/tracker/app/config/bootstrap/global.filters.php on line 3\nPHP message: PHP Stack trace:\nPHP message: PHP   1. {main}() /srv/www/work/tracker/app/webroot/index.php:0\nPHP message: PHP   2. require() /srv/www/work/tracker/app/webroot/index.php:22\nPHP message: PHP Fatal error:  Class 'app\\models\\Filters' not found in /srv/www/work/tracker/app/models/User.php on line 25\nPHP message: PHP Stack trace:\nPHP message: PHP   1. {main}() /srv/www/work/tracker/app/webroot/index.php:0\nPHP message: PHP   2. lithium\\action\\Dispatcher::run() /srv/www/work/tracker/app/webroot/index.php:44\nPHP message: PHP   3. lithium\\aop\\Filters::run() /srv/www/work/tracker/libraries/lithium/action/Dispatcher.php:170\nPHP message: PHP   4. lithium\\aop\\Chain->run() /srv/www/work/tracker/libraries/lithium/aop/Filters.php:233\nPHP message: PHP   5. {closure:/srv/www/work/tracker/app/config/bootstrap/action.php:45-56}() /srv/www/work/tracker/libraries/lithium/aop/Chain.php:123\nPHP message: PHP   6. lithium\\aop\\Chain->__invoke() /srv/www/work/tracker/app/config/bootstrap/action.php:55\nPHP message: PHP   7. lithium\\action\\Dispatcher::lithium\\action\\{closure}() /srv/www/work/tracker/libraries/lithium/aop/Chain.php:156\nPHP message: PHP   8. lithium\\action\\Dispatcher::_call() /srv/www/work/tracker/libraries/lithium/action/Dispatcher.php:169\nPHP message: PHP   9. lithium\\aop\\Filters::run() /srv/www/work/tracker/libraries/lithium/action/Dispatcher.php:280\nPHP message: PHP  10. lithium\\action\\Dispatcher::lithium\\action\\{closure}() /srv/www/work/tracker/libraries/lithium/aop/Filters.php:231\nPHP message: PHP  11. lithium\\action\\Controller->__invoke() /srv/www/work/tracker/libraries/lithium/action/Dispatcher.php:277\nPHP message: PHP  12. lithium\\aop\\Filters::run() /srv/www/work/tracker/libraries/lithium/action/Controller.php:227\nPHP message: PHP  13. lithium\\action\\Controller->lithium\\action\\{closure}() /srv/www/work/tracker/libraries/lithium/aop/Filters.php:231\nPHP message: PHP  14. lithium\\core\\Object->invokeMethod() /srv/www/work/tracker/libraries/lithium/action/Controller.php:213\nPHP message: PHP  15. app\\controllers\\UsersController->testing() /srv/www/work/tracker/libraries/lithium/core/Object.php:138\nPHP message: PHP  16. spl_autoload_call() /srv/www/work/tracker/libraries/lithium/core/Object.php:52\nPHP message: PHP  17. lithium\\core\\Libraries::load() /srv/www/work/tracker/libraries/lithium/core/Object.php:52\nPHP message: PHP  18. include() /srv/www/work/tracker/libraries/lithium/core/Libraries.php:493\n'


So the way I work very well is with a free hand. This is because I've found myself to be one of those people who work off of a wave ... like a flight
of ideas or a sudden flow of creativity. Guys like me need to ride that wave ... and our rational / emotional constitution is not such that it would
withstand any disturbances in between. It should probably be strong, but then if it does become really strong then it would run the risk of getting 
yourself painted as a crackpot.


2: 4 + 10 + 10 = 24
3: 24 + 10 + 10 + 5 = 49
4: 49 + 10 + 5 + 1 = 65
5: 65 + 5 + 1 = 71


SPARE: PrevScore + 10 + NextFrame.FirstRoll

8 + 20 + 7



,
                calTotal: function() {
                    this.calculate();
                    return;
                    // order is important here
                    var sequence = ['isBonusShot', 'isStrike', 'isSpare', 'isMiss', 'isNormal'];
                    var _map = {
                        'isBonusShot': 'bonus',
                        'isStrike': 'strike',
                        'isSpare': 'spare',
                        'isMiss': 'miss',
                        'isNormal': 'normal'
                    };

                    $(_map).each(function(k, v) {
                        var f = game.getCurrentFrame();
                        if (f[k]()) {
                            f.calculate[v]();
                        }
                    });

                    switch (1==1) {
                        case this.isStrike():
                            if (!this.canCalculateStrike()) {
                                return;
                            }

                            var bonus = 0;

                            var next1 = this.getNextFrame();

                            if (next1.isStrike()) {
                                bonus = 10;
                                var next2 = next1.getNextFrame();
                                if (next2.isStrike()) {
                                    bonus += 10;
                                } else {
                                    bonus += next2.getRolledPins(1);
                                }
                            } else {
                                bonus = next1.getRolledPins(1) + next1.getRolledPins(2);
                            }

                            var prevScore = this.getPrevScore();
                            var total = 10 + prevScore + bonus;

                            this.setFrameScore(total);

                            break;

                        case this.isSpare():
                            if (!this.canCalculateSpare()) {
                                return;
                            }

                            var score = 10;
                            var next = this.getNextFrame();
                            if (next.isStrike()) {
                                score += 10;
                            } else {
                                score += next.getRolledPins(1);
                            }

                            score += this.getPrevScore();
                            this.setFrameScore(score);

                            break;

                        case this.isMiss():
                            this.setFrameScore(this.getPrevScore());
                            break;

                        case this.isNormal():
                            if (this.frameScore != null) {
                                return;
                            }
                            var first = this.getRolledPins(1);
                            var second = this.getRolledPins(2);
                            var total = first + second;
                            var prev = 0;

                            if (this.hasPrevFrame()) {
                                this.getPrevFrame().calTotal();
                            }

                            prev = this.getPrevScore();

                            var score = total + prev;
                            this.setFrameScore(score);

                            break;

                        case this.isBonusShot():
                            //
                            break;
                    }
                },
